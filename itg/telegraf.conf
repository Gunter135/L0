# [[inputs.exec]]
#   interval = "10s"
#   commands=["mtr -C -n example.org"]
#   timeout = "40s"
#   data_format = "csv"
#   csv_skip_rows = 1
#   csv_column_names=["", "", "status", "dest", "hop", "ip", "loss", "snt", "", "", "avg", "best", "worst", "stdev"]
#   name_override = "mtr"
#   csv_tag_columns = ["dest", "hop", "ip"]

# Output to InfluxDB
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "oOUkZgSjaZj6nVEJHAms7IvgdvntQ4Qc5VBeR8WXlfYh4kyC3ZEUo0rB3N9erRXJffA-K7Zkg3349n1jVArSGA=="
  organization = "grafana"
  bucket = "telegraf"
[[outputs.influxdb]]
  urls = ["http://influxdbv1:8086"]
  database = "influx"
  username = "admin"
  password = "admin"


[[inputs.cpu]]
  ## Whether to report per-cpu stats or not
  percpu = true
  ## Whether to report total system cpu stats or not
  totalcpu = true
  ## If true, collect raw CPU time metrics.
  collect_cpu_time = false
  ## If true, compute and report the sum of all non-idle CPU states.
  report_active = false
[[inputs.disk]]
  ## By default stats will be gathered for all mount points.
  ## Set mount_points will restrict the stats to only the specified mount points.
  # mount_points = ["/"]
  ## Ignore mount points by filesystem type.
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "overlay", "aufs", "squashfs"]
[[inputs.diskio]]
[[inputs.mem]]
[[inputs.net]]
[[inputs.processes]]
[[inputs.swap]]
[[inputs.system]]
# Read metrics about temperature
[[inputs.temp]]
  ## Desired output format (Linux only)
  ## Available values are
  ##   v1 -- use pre-v1.22.4 sensor naming, e.g. coretemp_core0_input
  ##   v2 -- use v1.22.4+ sensor naming, e.g. coretemp_core_0_input
  # metric_format = "v2"

  ## Add device tag to distinguish devices with the same name (Linux only)
  # add_device_tag = false